package org.zerock.jdbcexamples;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.util.Objects;

import lombok.extern.log4j.Log4j2;

@Log4j2
public class Example5 {

	static final String jdbcDriver ="oracle.jdbc.OracleDriver";
	static final String jdbcTNSNamesUrl = "jdbc:oracle:thin:@xepdb1";
	static final String jdbcOracleCloudUrl = "jdbc:oracle:thin:@iabobij3bs5jnh34_high?TNS_ADMIN=C:/opt/OracleCloudWallet/VFX";
	
	static final String user = "HR";
	static final String passForCloud = "Oracle123456789";
	static final String passForLocal = "oracle";
	
	public static void main(String[] args){
		ResultSet rs =null;
		
		String sql = """
DELETE FROM EMPLOYEES
WHERE employee_id = ?
				""";
		
		try {
			Connection conn = DriverManager.getConnection(jdbcTNSNamesUrl,user,passForLocal); 
		}
		PreparedStatement pstmt = conn.prepareStatement(sql);	
		
		(
			
		) {
			log.info("1. conn: {}", conn);
			log.info("2. pstmt: {}", pstmt);
//			========================================
			//Local Transaction (Local TX), <=> Global (=Distributed) transaction(TX)
//			========================================
			conn.setAutoCommit(false); //set autocommit off
			pstmt.setInt(1, 112);
			
			int affectedRows= pstmt.executeUpdate();//DML, DDL, DCL(리턴타입 int)
			log.info("affectedRows: {}", affectedRows);
			assert affectedRows == 1; 
			
			//TCL - Connect 인터페이스의 추상메소드로 정의, 선언되어 있다.
//			conn.commit();			//COMMIT;
			conn.rollback();		//ROLLBACK;
//			========================================
		
		} catch(SQLException e) {
			e.printStackTrace();
		} //try-catch
	}//main
}//end class
